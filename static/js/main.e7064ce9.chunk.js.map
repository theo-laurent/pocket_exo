{"version":3,"sources":["components/Header.jsx","components/MovieDetails.jsx","components/MovieSearch.jsx","components/MoviePopular.jsx","App.js","index.js"],"names":["Header","props","useState","searchMovie","setSearchMovie","useEffect","length","setMovieSearch","className","type","placeholder","name","value","onChange","e","target","onClick","fetch","method","then","res","json","data","results","catch","error","htmlFor","MovieDetails","movieSolo","setMovieSolo","movieId","img","poster_path","titre","title","année","Date","release_date","getFullYear","dateFr","toLocaleDateString","genres","map","element","durée","Math","floor","runtime","overview","note","vote_average","style","backgroundImage","src","alt","width","text","styles","buildStyles","pathColor","textColor","textSize","MovieSearch","classSpecial","setClassSpecial","options","year","month","day","movieSearch","id","movie","window","scrollTo","setMovieId","uuidv4","MoviePopular","movies","setMovies","propTest","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7064ce9.chunk.js","sourcesContent":["// import css\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../styles/header.css\";\r\n\r\nexport default function Header(props) {\r\n  const [searchMovie, setSearchMovie] = useState(\"\");\r\n\r\n  useEffect(function () {\r\n    // si l'input renvoie une string égale à 0 on renvoie null pour le component App puis MovieSearch\r\n    if (searchMovie.length === 0) {\r\n      props.setMovieSearch(null);\r\n    }\r\n  });\r\n\r\n  // on fetch sur les caractères indiqués dans l'input\r\n  function search() {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie/?api_key=d4dfced817985d414b727774821c9678&query=${searchMovie}&language=fr`,\r\n      { method: \"GET\" }\r\n    )\r\n      .then(function (res) {\r\n        return res.json();\r\n      })\r\n      .then(function (data) {\r\n        // on transmet les données en props pour le component App puis MovieSearch\r\n        props.setMovieSearch(data.results);\r\n      })\r\n      .catch(function (error) {\r\n        return error;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"header__input\"\r\n        placeholder=\"Rechercher un film\"\r\n        name=\"headerSearch\"\r\n        value={searchMovie}\r\n        onChange={(e) => setSearchMovie(e.target.value)}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        onClick={() => search()}\r\n        htmlFor=\"headerSearch\"\r\n        className=\"header__btn\"\r\n      >\r\n        Rechercher\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","// import css\r\nimport \"../styles/movieDetails.css\";\r\n// import methodes react\r\nimport { useEffect, useState } from \"react\";\r\n// import diagramme circulaire\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nexport default function MovieDetails(props) {\r\n  const [movieSolo, setMovieSolo] = useState();\r\n\r\n  useEffect(\r\n    function () {\r\n      fetch(\r\n        `https://api.themoviedb.org/3/movie/${props.movieId}?api_key=d4dfced817985d414b727774821c9678&language=fr`,\r\n        { method: \"GET\" }\r\n      )\r\n        .then(function (res) {\r\n          return res.json();\r\n        })\r\n        .then(function (data) {\r\n          setMovieSolo(data);\r\n        })\r\n        .catch(function (error) {\r\n          return error;\r\n        });\r\n    },\r\n    [props.movieId]\r\n  );\r\n\r\n  if (movieSolo != null) {\r\n    // on créé des variables provenant de notre fetch pour construire plus lisiblement notre return JSX\r\n    let img = \"https://image.tmdb.org/t/p/w500/\" + movieSolo.poster_path;\r\n    let titre = movieSolo.title;\r\n    let année = ` (${new Date(movieSolo.release_date).getFullYear()})`;\r\n    let dateFr = new Date(movieSolo.release_date).toLocaleDateString();\r\n    let genres = movieSolo.genres.map((element) => {\r\n      return element.name + \", \";\r\n    });\r\n    let heure = Math.floor(movieSolo.runtime / 60);\r\n    let minutes = movieSolo.runtime % 60;\r\n    let durée = heure + \"h \" + minutes + \"m\";\r\n    let overview = movieSolo.overview;\r\n    let note = movieSolo.vote_average * 10;\r\n\r\n    return (\r\n      <div className=\"containerMovieDetails\">\r\n        <h1>Description</h1>\r\n        <div\r\n          className=\"containerMovieDetails__background\"\r\n          style={{\r\n            backgroundImage: ` url(${img})`,\r\n          }}\r\n        ></div>\r\n\r\n        <div className=\"containerMovieDetails__infos\">\r\n          <img src={img} alt=\"\" />\r\n          <div className=\"containerMovieDetails__infos__txt\">\r\n            <div className=\"containerMovieDetails__infos__title\">\r\n              <h1>{titre}</h1>\r\n              <p>{année}</p>\r\n            </div>\r\n\r\n            <ul>\r\n              <li className=\"liNone\">{dateFr}</li>\r\n              <li>{genres}</li>\r\n              <li>{durée}</li>\r\n            </ul>\r\n\r\n            <div className=\"divGraphique\">\r\n              <div style={{ width: 70 }}>\r\n                <CircularProgressbar\r\n                  value={note}\r\n                  text={note + \"%\"}\r\n                  styles={buildStyles({\r\n                    pathColor: \"#18D07A\",\r\n                    textColor: \"white\",\r\n                    textSize: \"24px\",\r\n                  })}\r\n                />\r\n                <h3>Note des utilisateurs</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <h2>Synopsis</h2>\r\n            <p>{overview}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>loading</div>;\r\n  }\r\n}\r\n","// import css\r\nimport \"../styles/moviePopular.css\";\r\n// import methodes react\r\nimport { useEffect, useState } from \"react\";\r\n// import uuidv4 pour générer des clés uniques\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function MovieSearch(props) {\r\n  // state pour gérer le changement de className css\r\n  const [classSpecial, setClassSpecial] = useState(0);\r\n\r\n  const options = {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  useEffect(\r\n    function () {\r\n      // on change la className CSS pour le 1er film de la liste de recherche\r\n      if (props.movieSearch) {\r\n        setClassSpecial(props.movieSearch[0].id);\r\n      }\r\n    },\r\n    [props.movieSearch]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {props.movieSearch ? (\r\n        <div className=\"containerMoviePopular\">\r\n          <h1>Recherche</h1>\r\n          <div className=\"moviePopular\">\r\n            {props.movieSearch.map((movie) => (\r\n              <div\r\n                className={\r\n                  movie.id === classSpecial\r\n                    ? \"moviePopular__card\"\r\n                    : \"moviePopular__card moviePopular__card-unfocus\"\r\n                }\r\n                key={uuidv4()}\r\n                onClick={function () {\r\n                  // on remonte l'écran\r\n                  window.scrollTo(1000, 0);\r\n                  // on remonte en props l'id du film selectionné\r\n                  props.setMovieId(movie.id);\r\n                  // on change la className CSS pour le film selectionné\r\n                  setClassSpecial(movie.id);\r\n                }}\r\n              >\r\n                <img\r\n                  src={\"https://image.tmdb.org/t/p/w500/\" + movie.poster_path}\r\n                  alt=\"\"\r\n                />\r\n                <h3>{movie.title}</h3>\r\n                <p>\r\n                  {new Date(movie.release_date).toLocaleDateString(\r\n                    \"fr-FR\",\r\n                    options\r\n                  )}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","// import css\r\nimport \"../styles/moviePopular.css\";\r\n// import methodes react\r\nimport { useEffect, useState } from \"react\";\r\n// import uuidv4 pour générer des clés uniques\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function MoviePopular(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  // state pour gérer le changement de className css\r\n  const [classSpecial, setClassSpecial] = useState(0);\r\n\r\n  // destructure props et garde dans const pour éviter erreur de dépendances useEffect\r\n  const propTest = props.setMovieId;\r\n\r\n  // on fetch sur une Api pour recupérer les films les plus populaires\r\n  useEffect(\r\n    function () {\r\n      fetch(\r\n       \r\n        \"https://api.themoviedb.org/3/movie/popular?api_key=d4dfced817985d414b727774821c9678&language=fr\",\r\n        { method: \"GET\" }\r\n      )\r\n        .then(function (res) {\r\n          return res.json();\r\n        })\r\n        .then(function (data) {\r\n          // on transmet le premier de ces films en props pour le mettre en détail\r\n          propTest(data.results[0].id);\r\n          // on enregistre les données de ces films dans notre variable movies\r\n          setMovies(data.results);\r\n          // on change la className CSS pour le 1er film de la liste\r\n          setClassSpecial(data.results[0].id);\r\n        })\r\n        .catch(function (error) {\r\n          return error;\r\n        });\r\n    },\r\n    [propTest]\r\n  );\r\n\r\n  // on ne garde que les 5 premiers films de notre array movies\r\n  movies.splice(5, 15);\r\n\r\n  const options = {\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"containerMoviePopular\">\r\n      <h1>Films populaires</h1>\r\n      <div className=\"moviePopular\">\r\n        {movies.map((movie) => (\r\n          <div\r\n            className={\r\n              movie.id === classSpecial\r\n                ? \"moviePopular__card\"\r\n                : \"moviePopular__card moviePopular__card-unfocus\"\r\n            }\r\n            key={uuidv4()}\r\n            onClick={function () {\r\n              // on remonte l'écran\r\n              window.scrollTo(1000, 0);\r\n              // on remonte en props l'id du film selectionné\r\n              props.setMovieId(movie.id);\r\n              // on change la className CSS pour le film selectionné\r\n              setClassSpecial(movie.id);\r\n            }}\r\n          >\r\n            <img\r\n              src={\"https://image.tmdb.org/t/p/w500/\" + movie.poster_path}\r\n              alt=\"\"\r\n            />\r\n            <h3>{movie.title}</h3>\r\n            <p>\r\n              {new Date(movie.release_date).toLocaleDateString(\r\n                \"fr-FR\",\r\n                options\r\n              )}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// import css\nimport \"./styles/App.css\";\n// import components\nimport Header from \"./components/Header\";\nimport MovieDetails from \"./components/MovieDetails\";\nimport MovieSearch from \"./components/MovieSearch\";\nimport MoviePopular from \"./components/MoviePopular\";\n// import methodes react\nimport { useState } from \"react\";\n\nfunction App() {\n  // state pour détailler le film cliqué au sein de MovieDetails\n  const [movieId, setMovieId] = useState(55555);\n  // state pour faire apparaitre la section recherche avec le mot tapé en barre de recherche\n  const [movieSearch, setMovieSearch] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Header setMovieSearch={setMovieSearch} />\n      <MovieDetails movieId={movieId} setMovieId={setMovieId}/>\n      <MovieSearch movieSearch={movieSearch} setMovieId={setMovieId} setMovieSearch={setMovieSearch}/>\n      <MoviePopular setMovieId={setMovieId} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}